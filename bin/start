#!/usr/bin/env node

/*
    HTML5 Robot User Interface Server
    An ASLab Project,
    Developed by Daniel Peir√≥
    ETSII, UPM 2014-2015    
*/

/*  
    Domain module used to catch app errors elegantly and exit app
    No need to modify this code.
*/
var domain = require('domain').create();

domain.on('error', function(error) {

    console.log('HRUI error: ', error.message);
    if (error.message == 'listen EACCES') {
        console.log(' Error is probably due to app trying to start on PORT < 1024\n',
            'without required permissions. Either set a PORT > 1024 in app.js or see\n',
            "README 'Notes on using port 80' for ways to use PORT 80.\n",
            'SUDO should not be used for security reasons.');
    } else if (error.message.indexOf('ENOENT') >= 0) {
        if (error.message.indexOf('audioheader') >= 0) {
            console.log(' Error is caused by removal or renaming of audioheader files in\n',
                'public/misc/ directory. audioheaderAC1 or audioheaderAC2 (depending on\n',
                'number of channels of audio device) must be present.');            
        } else if (error.message.indexOf('avconv') >= 0) {
        	console.log(' Error is caused by failure to find avconv command. If your\n',
                'system doesn\'t have avconv or you prefer to use ffmpeg, you can change\n',
                'the AVCONV parameter in app.js to \'ffmpeg\'');   
        } else if (error.message.indexOf('python') >= 0) {
        	console.log(' Error is caused by failure to find python command.\n',
        		'Either make a link to your python (version < 3) binary called python\n',
        		'in your PATH, or modify app.js parameter PYTHON to point to your binary');  
        } else if (error.message.indexOf('node') >= 0) {
        	console.log(' Error is caused by failure to find node command.\n',
        		'Either make a link to your node binary called node\n',
        		'in your PATH, or modify app.js parameter NODE to point to your binary');  
        };     
    };
    console.log('Stack Trace: ', error.stack);
    process.exit(0);
});
//Start main app
domain.run(function() {
var debug = require('debug')('HRUI');
var app = require('../app');
});




